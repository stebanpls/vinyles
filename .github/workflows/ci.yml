name: Django CI

# Definimos un bloque reutilizable con un ancla (&)
x-install-mariadb-client: &install-mariadb-client
  name: Install MariaDB client
  run: |
    sudo apt-get update
    sudo apt-get install -y libmariadb-dev

on:
  push:

  pull_request:


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - <<: *install-mariadb-client # Usamos el ancla aquí
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run linter and formatter check
        run: |
          ruff check .
          ruff format --check .

  build:
    name: Test
    needs: lint # Ejecutar las pruebas solo si el linter pasa
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.11"]

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1 --password=testpassword"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - <<: *install-mariadb-client # Usamos el ancla aquí
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
        # Configuración de Django
        DJANGO_SECRET_KEY: 'dummy-key-for-testing-in-ci'
        DEBUG: 'False'
        # Configuración de la Base de Datos para el servicio temporal
        DB_NAME: testdb
        DB_USER: root
        DB_PASSWORD: testpassword
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
      run: |
        python manage.py test
