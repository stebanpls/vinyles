# Generated by Django 5.2.4 on 2025-07-05 13:23

import django.db.models.deletion
import django.utils.timezone
import gestion.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, unique=True, verbose_name='Nombre del Artista')),
                ('informacion', models.TextField(blank=True, default='', verbose_name='Información del Artista')),
                ('foto', models.ImageField(blank=True, default='artistas/default/default_avatar.png', null=True, upload_to='artistas/', verbose_name='Foto del Artista')),
                ('discogs_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ID de Discogs')),
            ],
            options={
                'verbose_name': 'Artista',
                'verbose_name_plural': 'Artistas',
                'db_table': 'artistas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Crud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=50, verbose_name='Apellidos')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_crud/', verbose_name='Foto')),
                ('clase', models.CharField(blank=True, max_length=100, verbose_name='Clase')),
                ('direccion', models.CharField(blank=True, max_length=250, verbose_name='Dirección')),
                ('fechaIngreso', models.DateField(blank=True, null=True, verbose_name='Fecha de Ingreso')),
            ],
            options={
                'verbose_name': 'CRUD',
                'verbose_name_plural': 'CRUDS',
                'db_table': 'cruds',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Departamento')),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'db_table': 'departamentos',
                'ordering': ['pais', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Género')),
                ('foto', models.ImageField(blank=True, default='generos/default/default_genero.png', null=True, upload_to='generos/', verbose_name='Foto del Género')),
            ],
            options={
                'verbose_name': 'Género',
                'verbose_name_plural': 'Géneros',
                'db_table': 'generos',
            },
        ),
        migrations.CreateModel(
            name='MedioDePago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Medio de Pago')),
            ],
            options={
                'verbose_name': 'Medio de Pago',
                'verbose_name_plural': 'Medios de Pago',
                'db_table': 'medios_de_pago',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del País')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'db_table': 'paises',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Productor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, unique=True, verbose_name='Nombre del Productor')),
                ('discogs_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ID de Discogs')),
            ],
            options={
                'verbose_name': 'Productor',
                'verbose_name_plural': 'Productores',
                'db_table': 'productores',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la Ciudad')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ciudades', to='gestion.departamento', verbose_name='Departamento')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
                'db_table': 'ciudades',
                'ordering': ['departamento', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='EstadoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloqueado', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estado_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cancion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre de la Canción')),
                ('discogs_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ID de Discogs')),
                ('duracion', models.DurationField(blank=True, null=True, verbose_name='Duración (ej: 00:03:46)')),
                ('artistas', models.ManyToManyField(blank=True, related_name='canciones_realizadas', to='gestion.artista', verbose_name='Artistas')),
                ('generos', models.ManyToManyField(blank=True, related_name='canciones_genero', to='gestion.genero', verbose_name='Géneros')),
                ('productores', models.ManyToManyField(blank=True, related_name='canciones_producidas', to='gestion.productor', verbose_name='Productores')),
            ],
            options={
                'verbose_name': 'Canción',
                'verbose_name_plural': 'Canciones',
                'db_table': 'canciones',
                'ordering': ['nombre'],
                'unique_together': {('nombre', 'duracion')},
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='cliente', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('numero_documento', models.CharField(blank=True, max_length=20, verbose_name='Número de Documento')),
                ('celular', models.CharField(blank=True, max_length=20, verbose_name='Celular')),
                ('direccion_residencia', models.CharField(blank=True, max_length=255)),
                ('foto_perfil', models.ImageField(blank=True, default='fotos_perfil/default/default_avatar.png', null=True, upload_to=gestion.models.user_directory_path, verbose_name='Foto de Perfil')),
                ('generos_favoritos', models.ManyToManyField(blank=True, to='gestion.genero', verbose_name='Géneros Favoritos')),
                ('medios_de_pago_guardados', models.ManyToManyField(blank=True, db_table='cliente_medio_de_pago', to='gestion.mediodepago', verbose_name='Medios de Pago Guardados')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField(help_text='El contenido de la notificación.')),
                ('leido', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('url_destino', models.CharField(blank=True, help_text='URL a la que debe dirigir la notificación.', max_length=255)),
                ('usuario_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='departamento',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departamentos', to='gestion.pais', verbose_name='País'),
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True, verbose_name='Código')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('expires_at', models.DateTimeField(verbose_name='Fecha de Expiración')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_codes', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Código de Restablecimiento de Contraseña',
                'verbose_name_plural': 'Códigos de Restablecimiento de Contraseña',
                'db_table': 'password_reset_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha del Pedido')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total del Pedido')),
                ('direccion_envio', models.CharField(max_length=255, verbose_name='Dirección de Envío')),
                ('ciudad_envio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_enviados_aqui', to='gestion.ciudad', verbose_name='Ciudad de Envío')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to='gestion.cliente', verbose_name='Cliente')),
                ('medio_de_pago', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_pagados_con', to='gestion.mediodepago', verbose_name='Medio de Pago')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'db_table': 'pedidos',
                'ordering': ['-fecha', 'cliente'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre del Producto/Álbum')),
                ('lanzamiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Lanzamiento')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción del Producto')),
                ('discografica', models.CharField(blank=True, max_length=200, verbose_name='Compañía Discográfica')),
                ('imagen_portada', models.ImageField(default='albumes/default/default_album.png', upload_to='productos_portadas/', verbose_name='Imagen de Portada')),
                ('discogs_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ID de Discogs')),
                ('artistas', models.ManyToManyField(related_name='productos', to='gestion.artista', verbose_name='Artista(s) Principal(es)')),
                ('genero_principal', models.ManyToManyField(blank=True, related_name='productos_principales', to='gestion.genero', verbose_name='Género(s) Principal(es) del Álbum')),
            ],
            options={
                'verbose_name': 'Producto (Catálogo)',
                'verbose_name_plural': 'Productos (Catálogo)',
                'db_table': 'productos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio de Venta')),
                ('stock', models.PositiveIntegerField(default=1, verbose_name='Cantidad en Venta')),
                ('descripcion_condicion', models.TextField(help_text="Ej: 'Casi nuevo, solo se usó una vez.' o 'La portada tiene un ligero desgaste en la esquina.'", verbose_name='Descripción de la Condición')),
                ('fecha_publicacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Publicación')),
                ('activa', models.BooleanField(default=True, verbose_name='Publicación Activa')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publicaciones', to='gestion.producto', verbose_name='Producto del Catálogo')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publicaciones', to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Publicación (Oferta)',
                'verbose_name_plural': 'Publicaciones (Ofertas)',
                'db_table': 'publicaciones',
                'ordering': ['-fecha_publicacion'],
                'unique_together': {('producto', 'vendedor')},
            },
        ),
        migrations.CreateModel(
            name='PedidoPublicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitario en el Momento de la Compra')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_pedido', to='gestion.pedido', verbose_name='Pedido')),
                ('publicacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lineas_de_pedido', to='gestion.publicacion', verbose_name='Publicación')),
            ],
            options={
                'verbose_name': 'Publicación del Pedido',
                'verbose_name_plural': 'Publicaciones del Pedido',
                'db_table': 'pedido_publicaciones',
                'ordering': ['pedido', 'publicacion'],
                'unique_together': {('pedido', 'publicacion')},
            },
        ),
        migrations.AddField(
            model_name='pedido',
            name='publicaciones',
            field=models.ManyToManyField(related_name='en_pedidos', through='gestion.PedidoPublicacion', to='gestion.publicacion', verbose_name='Publicaciones en el Pedido'),
        ),
        migrations.CreateModel(
            name='TicketSoporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripción del Caso')),
                ('estado', models.CharField(choices=[('ABIERTO', 'Abierto'), ('EN_PROCESO', 'En Proceso'), ('RESUELTO', 'Resuelto'), ('CERRADO', 'Cerrado')], default='ABIERTO', max_length=20, verbose_name='Estado del Caso')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_soporte', to='gestion.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Ticket de Soporte',
                'verbose_name_plural': 'Tickets de Soporte',
                'db_table': 'tickets_soporte',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ProductoCancion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_pista', models.PositiveIntegerField(verbose_name='Número de Pista')),
                ('cancion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apariciones_en_productos', to='gestion.cancion', verbose_name='Canción')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='gestion.producto', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Canción en Producto',
                'verbose_name_plural': 'Canciones en Productos',
                'db_table': 'producto_canciones',
                'ordering': ['producto', 'numero_pista'],
                'unique_together': {('producto', 'cancion'), ('producto', 'numero_pista')},
            },
        ),
    ]
